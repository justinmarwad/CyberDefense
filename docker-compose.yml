version: "3.8"

services:

  ## DNSmasq - DNS and DHCP server ##
  dnsmasq:
    image: tschaffter/dnsmasq:2.85    
    volumes:
      - ./config/dnsmasq/dnsmasq.conf:/etc/dnsmasq.conf:ro
      - ./config/dnsmasq/cyber.uml.edu.conf:/etc/dnsmasq.d/cyber.uml.edu.conf:ro
    command: ["dnsmasq", "-k", "--server", "1.1.1.1", "--server", "1.0.0.1"]
    ports:
     - "53:53/udp"
     - "53:53/tcp"

    deploy:
      placement:
        constraints:
          - "node.role==manager"  
      
      restart_policy:
        condition: on-failure

  ## WireGuard - VPN server ##
  wireguard:
    image: lscr.io/linuxserver/wireguard:v1.0.20210914-ls75

    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    env_file:
      - ./config/wireguard/common.env
      - ./config/wireguard/secret.env
    environment:
      - SERVERURL=example.com
      - SERVERPORT=51820
      - PEERS=mattLaptop,mattPhone
    ports:
      - 51820:51820/udp
    volumes:
      - ./config/wireguard/modules:/lib/modules
      - ./config//wireguard/wireguard-config:/config

    deploy:
      placement:
        constraints:
          - "node.role==manager"  
      restart_policy:
        condition: on-failure



  ## Nextcloud - Reverse proxy ##
  nextcloud:
    image: nextcloud
    depends_on:
      - nextcloud_db
    
    environment:
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
      MYSQL_PASSWORD: nextcloud
      MYSQL_HOST: nextcloud_db
    volumes:
      - ./config/nextcloud/apps:/var/www/html/apps
      - ./config/nextcloud/config:/var/www/html/config
      - ./config/nextcloud/data:/var/www/html/data
    ports:
      - 80:80

    deploy:
      replicas: 3
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure

  nextcloud_db:
    image: mariadb
    
    environment:
      MYSQL_ROOT_PASSWORD: nextcloud
      MYSQL_DATABASE: nextcloud 
      MYSQL_USER: nextcloud
      MYSQL_PASSWORD: nextcloud
    volumes:
      - ./config/nextcloud/mariadb:/var/lib/mysql
    
    deploy:
      placement:
        constraints:
          - "node.role!=manager"  
      restart_policy:
        condition: on-failure



  ## Portainer - Docker management ##
  portainer:
    image: portainer/portainer-ce:latest
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer:/data
    ports:
      - 9000:9000

volumes: 
  portainer: